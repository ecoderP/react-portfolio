
// Gradient Mixin
@mixin gradient {
    background: linear-gradient(to right, rgba($primary, 0.95), rgba($secondary, 0.8));

}


@mixin titleHeading-small {
    font-size: 2rem;
    //color: $primary;
    text-align: center;
}

@mixin titleHeading-big {
    font-size: 3rem;
    //color: $primary;
    text-align: center;
}


/*-- Media Queries --*/
$size__site_content_width: 1024px;

/* Breakpoints */
$media_queries : (
    'mobile'    : "only screen and (max-width: 720px)",
    'tablet'    : "only screen and (min-width: 721px) and (max-width: $size__site_content_width)",
    'desktop'   : "only screen and (min-width: ($size__site_content_width + 1))",
    'retina2'   : "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)",
    'retina3'   : "only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)",
    'landscape' : "screen and (orientation:landscape) ",    
    'portrait'  : "screen and (orientation:portrait) "
);

@mixin for_breakpoint($breakpoints) {
    $conditions : ();
    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append(
            $conditions,
            #{inspect(map-get($media_queries, $breakpoint))},
            comma
        );
    }

    @media #{$conditions} {
        @content;
    }

}